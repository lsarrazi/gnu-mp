#include "Float.hpp"
#include "utils.hpp"
#include <emscripten/bind.h>

EMSCRIPTEN_BINDINGS(my_module)
{
	constant("Nearest", (int)mpfr_rnd_t::MPFR_RNDN);
	constant("TowardZero", (int)mpfr_rnd_t::MPFR_RNDZ);
	constant("TowardInfinity", (int)mpfr_rnd_t::MPFR_RNDU);
	constant("TowardMinusInfinity", (int)mpfr_rnd_t::MPFR_RNDD);
	constant("AwayZero", (int)mpfr_rnd_t::MPFR_RNDA);
	constant("Faithful", (int)mpfr_rnd_t::MPFR_RNDF); 

	function("free_cache", mpfr_free_cache);

	class_<Float>("Float")
		.constructor()
		.constructor<val>()
		// properties
		.property("rounding", &Float::getRounding, &Float::setRounding)
		.property("precision", &Float::getPrecision, &Float::setPrecision)
		.property("exponent", &Float::getExponent, &Float::setExponent)
		.property("sign", &Float::getSign, &Float::setSign)

		// assignments
		.function("set", &Float::set)
		.function("set", select_overload<Float::builder_pattern(const std::string &, int)>(&Float::setString))
		.function("swap", &Float::swap)
		.function("setRounding", &Float::setRounding)
		.function("setPrecision", &Float::setPrecision)
		.function("setExponent", &Float::setExponent)
		.function("setSign", &Float::setSign)

		// conversions
		.function("toString", select_overload<std::string()>(&Float::toString))
		.function("toString", select_overload<std::string(int)>(&Float::toString))
		.function("toString", select_overload<std::string(int, int)>(&Float::toString))
		.function("toNumber", &Float::toNumber)
		.function("valueOf", &Float::toNumber)

		// comparisons
		.function("less", &Float::less)
		.function("less_equal", &Float::less_equal)
		.function("greater", &Float::greater)
		.function("greater_equal", &Float::greater_equal)
		.function("equal", &Float::equal)
		.function("not_equal", &Float::not_equal)

		// arithmetic
		.function("add", &Float::add)
		.function("sub", &Float::sub)
		.function("mul", &Float::mul)
		.function("div", &Float::div)
		.function("neg", &Float::neg)
		.function("dim", &Float::dim)
		.function("sqrt", &Float::sqrt)
		.function("cbrt", &Float::cbrt)
		.function("rec_sqrt", &Float::rec_sqrt)
		.function("root_ui", &Float::root_ui)

		// advanced arithmetic
		.function("fma", &Float::fma)
		.function("fmma", &Float::fmma)
		.function("fms", &Float::fms)
		.function("fmms", &Float::fmms)

		// TRANSCENDENTALS

		.function("log", &Float::log)
		.function("log_ui", &Float::log_ui)
		.function("log2", &Float::log2)
		.function("log10", &Float::log10)
		.function("log1p", &Float::log1p)
		.function("exp", &Float::exp)
		.function("exp2", &Float::exp2)
		.function("exp10", &Float::exp10)
		.function("expm1", &Float::expm1)
		.function("pow", &Float::pow)
		.function("pow_si", &Float::pow_si)
		.function("ui_pow_ui", &Float::ui_pow_ui)
		.function("ui_pow", &Float::ui_pow)
		.function("cos", &Float::cos)
		.function("sin", &Float::sin)
		.function("tan", &Float::tan)
		.function("sec", &Float::sec)
		.function("csc", &Float::csc)
		.function("cot", &Float::cot)
		.function("acos", &Float::acos)
		.function("asin", &Float::asin)
		.function("atan", &Float::atan)
		.function("atan2", &Float::atan2)
		.function("cosh", &Float::cosh)
		.function("sinh", &Float::sinh)
		.function("tanh", &Float::tanh)
		.function("sech", &Float::sech)
		.function("csch", &Float::csch)
		.function("coth", &Float::coth)
		.function("acosh", &Float::acosh)
		.function("asinh", &Float::asinh)
		.function("atanh", &Float::atanh)
		.function("eint", &Float::eint)
		.function("li2", &Float::li2)
		.function("gamma", &Float::gamma)
		.function("gamma_inc", &Float::gamma_inc)
		.function("lngamma", &Float::lngamma)
		.function("lgamma", &Float::lgamma)
		.function("digamma", &Float::digamma)
		.function("beta", &Float::beta)
		.function("zeta", &Float::zeta)
		.function("zeta_ui", &Float::zeta_ui)
		.function("erf", &Float::erf)
		.function("erfc", &Float::erfc)
		.function("j0", &Float::j0)
		.function("j1", &Float::j1)
		.function("jn", &Float::jn)
		.function("y0", &Float::y0)
		.function("y1", &Float::y1)
		.function("yn", &Float::yn)
		.function("agm", &Float::agm)
		.function("ai", &Float::ai)
		.function("const_log2", &Float::const_log2)
		.function("const_pi", &Float::const_pi)
		.function("const_euler", &Float::const_euler)
		.function("const_catalan", &Float::const_catalan)

		// extra stuff
		.function("getMantissaSize", &Float::getMantissaSize)
		.function("getMantissaView", &Float::getMantissaView)
		.function("getRoundingString", &Float::getRoundingString)

		// static stuff
		.class_function("add", &Float::op_add)
		.class_function("sub", &Float::op_sub)
		.class_function("mul", &Float::op_mul)
		.class_function("div", &Float::op_div)
		.class_function("neg", &Float::op_neg)
		.class_function("dim", &Float::op_dim)
		.class_function("sqrt", &Float::op_sqrt)
		.class_function("cbrt", &Float::op_cbrt)
		.class_function("rec_sqrt", &Float::op_rec_sqrt)
		.class_function("root_ui", &Float::op_root_ui)
		.class_function("fac", &Float::op_fac)
		.class_function("fma", &Float::op_fma)
		.class_function("fmma", &Float::op_fmma)
		.class_function("fms", &Float::op_fms)
		.class_function("fmms", &Float::op_fmms)
		.class_function("hypot", &Float::op_hypot)
		.class_function("sum", &Float::op_sum)
		.class_function("dot", &Float::op_dot)

		// TRANSCENDENTALS

		.class_function("log", &Float::op_log)
		.class_function("log_ui", &Float::op_log_ui)
		.class_function("log2", &Float::op_log2)
		.class_function("log10", &Float::op_log10)
		.class_function("log1p", &Float::op_log1p)
		.class_function("exp", &Float::op_exp)
		.class_function("exp2", &Float::op_exp2)
		.class_function("exp10", &Float::op_exp10)
		.class_function("expm1", &Float::op_expm1)
		.class_function("pow", &Float::op_pow)
		.class_function("pow_si", &Float::op_pow_si)
		.class_function("ui_pow_ui", &Float::op_ui_pow_ui)
		.class_function("ui_pow", &Float::op_ui_pow)
		.class_function("cos", &Float::op_cos)
		.class_function("sin", &Float::op_sin)
		.class_function("tan", &Float::op_tan)
		.class_function("sin_cos", &Float::op_sin_cos)
		.class_function("sec", &Float::op_sec)
		.class_function("csc", &Float::op_csc)
		.class_function("cot", &Float::op_cot)
		.class_function("acos", &Float::op_acos)
		.class_function("asin", &Float::op_asin)
		.class_function("atan", &Float::op_atan)
		.class_function("atan2", &Float::op_atan2)
		.class_function("cosh", &Float::op_cosh)
		.class_function("sinh", &Float::op_sinh)
		.class_function("tanh", &Float::op_tanh)
		.class_function("sinh_cosh", &Float::op_sinh_cosh)
		.class_function("sech", &Float::op_sech)
		.class_function("csch", &Float::op_csch)
		.class_function("coth", &Float::op_coth)
		.class_function("acosh", &Float::op_acosh)
		.class_function("asinh", &Float::op_asinh)
		.class_function("atanh", &Float::op_atanh)
		.class_function("eint", &Float::op_eint)
		.class_function("li2", &Float::op_li2)
		.class_function("gamma", &Float::op_gamma)
		.class_function("gamma_inc", &Float::op_gamma_inc)
		.class_function("lngamma", &Float::op_lngamma)
		.class_function("lgamma", &Float::op_lgamma)
		.class_function("digamma", &Float::op_digamma)
		.class_function("beta", &Float::op_beta)
		.class_function("zeta", &Float::op_zeta)
		.class_function("zeta_ui", &Float::op_zeta_ui)
		.class_function("erf", &Float::op_erf)
		.class_function("erfc", &Float::op_erfc)
		.class_function("j0", &Float::op_j0)
		.class_function("j1", &Float::op_j1)
		.class_function("jn", &Float::op_jn)
		.class_function("y0", &Float::op_y0)
		.class_function("y1", &Float::op_y1)
		.class_function("yn", &Float::op_yn)
		.class_function("agm", &Float::op_agm)
		.class_function("ai", &Float::op_ai)
		.class_function("const_log2", &Float::op_const_log2)
		.class_function("const_pi", &Float::op_const_pi)
		.class_function("const_euler", &Float::op_const_euler)
		.class_function("const_catalan", &Float::op_const_catalan)
		;
};
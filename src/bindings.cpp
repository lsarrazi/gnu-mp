#include "Float.hpp"
#include "FloatRegister.hpp"
#include "quadrature/TanhSinh.hpp"
#include "utils.hpp"
#include <emscripten/bind.h>

EMSCRIPTEN_BINDINGS(my_module)
{
	constant("Nearest", (int)mpfr_rnd_t::MPFR_RNDN);
	constant("TowardZero", (int)mpfr_rnd_t::MPFR_RNDZ);
	constant("TowardInfinity", (int)mpfr_rnd_t::MPFR_RNDU);
	constant("TowardMinusInfinity", (int)mpfr_rnd_t::MPFR_RNDD);
	constant("AwayZero", (int)mpfr_rnd_t::MPFR_RNDA);
	constant("Faithful", (int)mpfr_rnd_t::MPFR_RNDF);

	function("float_register_test", &float_register_test);

	class_<Float>("Float")
		.constructor()
		.constructor<val>()
		// properties
		.property("rounding", &Float::getRounding, &Float::setRounding)
		.property("precision", &Float::getPrecision, &Float::setPrecision)
		.property("exponent", &Float::getExponent, &Float::setExponent)
		.property("sign", &Float::getSign, &Float::setSign)

		// assignments
		.function("set", &Float::set)
		.function("set", select_overload<Float::builder_pattern(const std::string &, int)>(&Float::setString))
		.function("swap", &Float::swap)
		.function("setRounding", &Float::setRounding)
		.function("setPrecision", &Float::setPrecision)
		.function("setExponent", &Float::setExponent)
		.function("setSign", &Float::setSign)

		// conversions
		.function("toString", select_overload<std::string() const>(&Float::toString))
		.function("toString", select_overload<std::string(int) const>(&Float::toString))
		.function("toString", select_overload<std::string(int, int) const>(&Float::toString))
		.function("toNumber", &Float::toNumber)
		.function("valueOf", &Float::toNumber)

		// comparisons
		.function("less", &Float::less)
		.function("less_equal", &Float::less_equal)
		.function("greater", &Float::greater)
		.function("greater_equal", &Float::greater_equal)
		.function("equal", &Float::equal)
		.function("not_equal", &Float::not_equal)

		// arithmetic
		.function("add", &Float::add)
		.function("sub", &Float::sub)
		.function("mul", &Float::mul)
		.function("div", &Float::div)
		.function("neg", &Float::neg)
		.function("dim", &Float::dim)
		.function("sqrt", &Float::sqrt)
		.function("cbrt", &Float::cbrt)
		.function("rec_sqrt", &Float::rec_sqrt)
		.function("root_ui", &Float::root_ui)

		// advanced arithmetic
		.function("fma", &Float::fma)
		.function("fmma", &Float::fmma)
		.function("fms", &Float::fms)
		.function("fmms", &Float::fmms)

		// TRANSCENDENTALS

		.function("log", &Float::log)
		.function("log_ui", &Float::log_ui)
		.function("log2", &Float::log2)
		.function("log10", &Float::log10)
		.function("log1p", &Float::log1p)
		.function("exp", &Float::exp)
		.function("exp2", &Float::exp2)
		.function("exp10", &Float::exp10)
		.function("expm1", &Float::expm1)
		.function("pow", &Float::pow)
		.function("pow_si", &Float::pow_si)
		.function("ui_pow_ui", &Float::ui_pow_ui)
		.function("ui_pow", &Float::ui_pow)
		.function("cos", &Float::cos)
		.function("sin", &Float::sin)
		.function("tan", &Float::tan)
		.function("sec", &Float::sec)
		.function("csc", &Float::csc)
		.function("cot", &Float::cot)
		.function("acos", &Float::acos)
		.function("asin", &Float::asin)
		.function("atan", &Float::atan)
		.function("atan2", &Float::atan2)
		.function("cosh", &Float::cosh)
		.function("sinh", &Float::sinh)
		.function("tanh", &Float::tanh)
		.function("sech", &Float::sech)
		.function("csch", &Float::csch)
		.function("coth", &Float::coth)
		.function("acosh", &Float::acosh)
		.function("asinh", &Float::asinh)
		.function("atanh", &Float::atanh)
		.function("eint", &Float::eint)
		.function("li2", &Float::li2)
		.function("gamma", &Float::gamma)
		.function("gamma_inc", &Float::gamma_inc)
		.function("lngamma", &Float::lngamma)
		.function("lgamma", &Float::lgamma)
		.function("digamma", &Float::digamma)
		.function("beta", &Float::beta)
		.function("zeta", &Float::zeta)
		.function("zeta_ui", &Float::zeta_ui)
		.function("erf", &Float::erf)
		.function("erfc", &Float::erfc)
		.function("j0", &Float::j0)
		.function("j1", &Float::j1)
		.function("jn", &Float::jn)
		.function("y0", &Float::y0)
		.function("y1", &Float::y1)
		.function("yn", &Float::yn)
		.function("agm", &Float::agm)
		.function("ai", &Float::ai)
		.function("const_log2", &Float::const_log2)
		.function("const_pi", &Float::const_pi)
		.function("const_euler", &Float::const_euler)
		.function("const_catalan", &Float::const_catalan)

		// extra stuff
		.function("getMantissaSize", &Float::getMantissaSize)
		.function("getMantissaView", &Float::getMantissaView)
		.function("getRoundingString", &Float::getRoundingString)

		// static stuff
		.class_function("add", &Float::op_add)
		.class_function("sub", &Float::op_sub)
		.class_function("mul", &Float::op_mul)
		.class_function("div", &Float::op_div)
		.class_function("neg", &Float::op_neg)
		.class_function("dim", &Float::op_dim)
		.class_function("sqrt", &Float::op_sqrt)
		.class_function("cbrt", &Float::op_cbrt)
		.class_function("rec_sqrt", &Float::op_rec_sqrt)
		.class_function("root_ui", &Float::op_root_ui)
		.class_function("fac", &Float::op_fac)
		.class_function("fma", &Float::op_fma)
		.class_function("fmma", &Float::op_fmma)
		.class_function("fms", &Float::op_fms)
		.class_function("fmms", &Float::op_fmms)
		.class_function("hypot", &Float::op_hypot)
		.class_function("sum", &Float::op_sum)
		.class_function("dot", &Float::op_dot)

		// TRANSCENDENTALS

		.class_function("log", &Float::op_log)
		.class_function("log_ui", &Float::op_log_ui)
		.class_function("log2", &Float::op_log2)
		.class_function("log10", &Float::op_log10)
		.class_function("log1p", &Float::op_log1p)
		.class_function("exp", &Float::op_exp)
		.class_function("exp2", &Float::op_exp2)
		.class_function("exp10", &Float::op_exp10)
		.class_function("expm1", &Float::op_expm1)
		.class_function("pow", &Float::op_pow)
		.class_function("pow_si", &Float::op_pow_si)
		.class_function("ui_pow_ui", &Float::op_ui_pow_ui)
		.class_function("ui_pow", &Float::op_ui_pow)
		.class_function("cos", &Float::op_cos)
		.class_function("sin", &Float::op_sin)
		.class_function("tan", &Float::op_tan)
		.class_function("sin_cos", &Float::op_sin_cos)
		.class_function("sec", &Float::op_sec)
		.class_function("csc", &Float::op_csc)
		.class_function("cot", &Float::op_cot)
		.class_function("acos", &Float::op_acos)
		.class_function("asin", &Float::op_asin)
		.class_function("atan", &Float::op_atan)
		.class_function("atan2", &Float::op_atan2)
		.class_function("cosh", &Float::op_cosh)
		.class_function("sinh", &Float::op_sinh)
		.class_function("tanh", &Float::op_tanh)
		.class_function("sinh_cosh", &Float::op_sinh_cosh)
		.class_function("sech", &Float::op_sech)
		.class_function("csch", &Float::op_csch)
		.class_function("coth", &Float::op_coth)
		.class_function("acosh", &Float::op_acosh)
		.class_function("asinh", &Float::op_asinh)
		.class_function("atanh", &Float::op_atanh)
		.class_function("eint", &Float::op_eint)
		.class_function("li2", &Float::op_li2)
		.class_function("gamma", &Float::op_gamma)
		.class_function("gamma_inc", &Float::op_gamma_inc)
		.class_function("lngamma", &Float::op_lngamma)
		.class_function("lgamma", &Float::op_lgamma)
		.class_function("digamma", &Float::op_digamma)
		.class_function("beta", &Float::op_beta)
		.class_function("zeta", &Float::op_zeta)
		.class_function("zeta_ui", &Float::op_zeta_ui)
		.class_function("erf", &Float::op_erf)
		.class_function("erfc", &Float::op_erfc)
		.class_function("j0", &Float::op_j0)
		.class_function("j1", &Float::op_j1)
		.class_function("jn", &Float::op_jn)
		.class_function("y0", &Float::op_y0)
		.class_function("y1", &Float::op_y1)
		.class_function("yn", &Float::op_yn)
		.class_function("agm", &Float::op_agm)
		.class_function("ai", &Float::op_ai)
		.class_function("const_log2", &Float::op_const_log2)
		.class_function("const_pi", &Float::op_const_pi)
		.class_function("const_euler", &Float::op_const_euler)
		.class_function("const_catalan", &Float::op_const_catalan)

		// Library functions
		.class_function("get_default_rounding_mode", (int (*)(void))mpfr_get_default_rounding_mode)
		.class_function("get_version", Float::op_get_version)
		.class_function("get_patches", Float::op_get_patches)
		.class_function("buildopt_tls_p", mpfr_buildopt_tls_p)
		.class_function("buildopt_float128_p", mpfr_buildopt_float128_p)
		.class_function("buildopt_decimal_p", mpfr_buildopt_decimal_p)
		.class_function("buildopt_gmpinternals_p", mpfr_buildopt_gmpinternals_p)
		.class_function("buildopt_sharedcache_p", mpfr_buildopt_sharedcache_p)
		.class_function("buildopt_tune_case", Float::op_buildopt_tune_case)
		.class_function("get_emin", mpfr_get_emin)
		.class_function("get_emax", mpfr_get_emax)
		.class_function("get_emin_min", mpfr_get_emin_min)
		.class_function("get_emin_max", mpfr_get_emin_max)
		.class_function("get_emax_min", mpfr_get_emax_min)
		.class_function("get_emax_max", mpfr_get_emax_max)
		.class_function("clear_underflow", mpfr_clear_underflow)
		.class_function("clear_overflow", mpfr_clear_overflow)
		.class_function("clear_divby0", mpfr_clear_divby0)
		.class_function("clear_nanflag", mpfr_clear_nanflag)
		.class_function("clear_inexflag", mpfr_clear_inexflag)
		.class_function("clear_erangeflag", mpfr_clear_erangeflag)
		.class_function("clear_flags", mpfr_clear_flags)
		.class_function("set_underflow", mpfr_set_underflow)
		.class_function("set_overflow", mpfr_set_overflow)
		.class_function("set_divby0", mpfr_set_divby0)
		.class_function("set_nanflag", mpfr_set_nanflag)
		.class_function("set_inexflag", mpfr_set_inexflag)
		.class_function("set_erangeflag", mpfr_set_erangeflag)
		.class_function("underflow_p", mpfr_underflow_p)
		.class_function("overflow_p", mpfr_overflow_p)
		.class_function("divby0_p", mpfr_divby0_p)
		.class_function("nanflag_p", mpfr_nanflag_p)
		.class_function("inexflag_p", mpfr_inexflag_p)
		.class_function("erangeflag_p", mpfr_erangeflag_p)
		.class_function("flags_save", mpfr_flags_save)
		.class_function("free_pool", mpfr_free_pool)
		.class_function("free_cache", mpfr_free_cache)

		.class_function("sqr", Float::op_sqr)
		.class_function("cmp", Float::op_cmp)
		.class_function("cmp_ui", Float::op_cmp_ui)
		.class_function("cmp_si", Float::op_cmp_si)
		.class_function("cmp_d", Float::op_cmp_d)
		.class_function("cmp_ui_2exp", Float::op_cmp_ui_2exp)
		.class_function("cmp_si_2exp", Float::op_cmp_si_2exp)
		.class_function("cmpabs", Float::op_cmpabs)
		.class_function("cmpabs_ui", Float::op_cmpabs_ui)
		.class_function("nan_p", Float::op_nan_p)
		.class_function("inf_p", Float::op_inf_p)
		.class_function("number_p", Float::op_number_p)
		.class_function("zero_p", Float::op_zero_p)
		.class_function("regular_p", Float::op_regular_p)
		.class_function("sgn", Float::op_sgn)
		.class_function("greater_p", Float::op_greater_p)
		.class_function("greaterequal_p", Float::op_greaterequal_p)
		.class_function("less_p", Float::op_less_p)
		.class_function("lessequal_p", Float::op_lessequal_p)
		.class_function("equal_p", Float::op_equal_p)
		.class_function("lessgreater_p", Float::op_lessgreater_p)
		.class_function("unordered_p", Float::op_unordered_p)
		.class_function("total_order_p", Float::op_total_order_p)
		.class_function("frac", Float::op_frac)
		.class_function("modf", Float::op_modf)
		.class_function("fmod", Float::op_fmod)
		.class_function("fmodquo", Float::op_fmodquo)
		.class_function("remainder", Float::op_remainder)
		.class_function("remquo", Float::op_remquo)
		.class_function("set_default_rounding_mode", Float::op_set_default_rounding_mode)
		.class_function("prec_round", Float::op_prec_round)
		.class_function("can_round", Float::op_can_round)
		.class_function("min_prec", Float::op_min_prec)
		.class_function("nexttoward", Float::op_nexttoward)
		.class_function("nextabove", Float::op_nextabove)
		.class_function("nextbelow", Float::op_nextbelow)
		.class_function("min", Float::op_min)
		.class_function("max", Float::op_max)
		//.class_function("nrandom", Float::op_nrandom)
		//.class_function("grandom", Float::op_grandom)
		//.class_function("erandom", Float::op_erandom)
		.class_function("get_exp", Float::op_get_exp)
		.class_function("set_exp", Float::op_set_exp)
		.class_function("signbit", Float::op_signbit)
		.class_function("setsign", Float::op_setsign)
		.class_function("copysign", Float::op_copysign)
		.class_function("set_emin", Float::op_set_emin)
		.class_function("set_emax", Float::op_set_emax)
		.class_function("check_range", Float::op_check_range)
		.class_function("subnormalize", Float::op_subnormalize)
		.class_function("flags_clear", Float::op_flags_clear)
		.class_function("flags_set", Float::op_flags_set)
		.class_function("flags_test", Float::op_flags_test)
		.class_function("flags_restore", Float::op_flags_restore);

	class_<TanhSinh>("TanhSinh")
		.constructor<Float::prec_t>()
		.constructor<Float::prec_t, int>()
		.function("compile", &TanhSinh::compile)
		.function("integrate", &TanhSinh::integrate)
		//.function("setIntegrand", &TanhSinh::setIntegrand)
		.function("setBounds", &TanhSinh::setBounds)
		.function("setUpperBound", &TanhSinh::setUpperBound)
		.function("getUpperBound", &TanhSinh::getUpperBound)
		.function("setLowerBound", &TanhSinh::setLowerBound)
		.function("getLowerBound", &TanhSinh::getLowerBound)
		.function("isConvergentError", &TanhSinh::isConvergentError)
		.function("getAbsoluteErrorApprox", &TanhSinh::getAbsoluteErrorApprox)
		.function("getRelativeErrorExponent", &TanhSinh::getRelativeErrorExponent)
		.function("getIntegralApprox", &TanhSinh::getIntegralApprox);
};